{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","pages","firstPage","lastPage","handlePageChange","newPage","className","cn","disabled","href","onClick","map","page","active","items","App","useState","setPerPage","setCurrentPage","length","maxItem","firstItem","lastItem","visibleItems","slice","id","value","onChange","e","Number","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAQd,EAAW,EAAGW,GACtBI,EAA4B,IAAhBN,EACZO,EAAWP,IAAgBE,EAE3BM,EAAmB,SAACC,GACpBA,IAAYT,GAIhBC,EAAaQ,IAGf,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAAUN,IAA3C,SACE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeP,EACfQ,QAAS,kBAAMN,EAAiBR,EAAc,IALhD,oBAUDK,EAAMU,KAAI,SAACC,GAAD,OACT,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQjB,IAAgBgB,IAFvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMN,EAAiBQ,IAJlC,SAMGA,KATEA,MAcT,oBAAIN,UAAWC,IAAG,YAAa,CAAEC,SAAUL,IAA3C,SACE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,kBAAMN,EAAiBR,EAAc,IALhD,wBCtDFkB,EAAQ3B,EAAW,EAAG,IACzBwB,KAAI,SAAApB,GAAC,qBAAYA,MAEPwB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBsB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBsB,EAApB,KAWMxB,EAAQoB,EAAMK,OACdC,EAAUxB,EAAcD,EAExB0B,EAAYD,EAAUzB,EACtB2B,EAAWF,EAAU1B,EACvBA,EACA0B,EAEEG,EAAeT,EAAMU,MAAMH,EAAWC,GAE5C,OACE,sBAAKhB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWV,EADX,mBACiCyB,EAAY,EAD7C,cACoDC,EADpD,eACmE5B,EADnE,OAIA,sBAAKY,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRmB,GAAG,kBACHnB,UAAU,eACVoB,MAAO/B,EACPgC,SAlCY,SAACC,GACrBX,EAAWY,OAAOD,EAAEE,OAAOJ,QAC3BR,EAAe,IA2BT,UAOE,wBAAQQ,MAAO,EAAf,eACA,wBAAQA,MAAO,EAAf,eACA,wBAAQA,MAAO,GAAf,gBACA,wBAAQA,MAAO,GAAf,qBAIJ,uBAAOK,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAMF,cAAC,EAAD,CACEZ,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAhDa,SAACe,GAClBM,EAAeN,MAkDb,6BACGW,EAAaZ,KAAI,SAACqB,GAAD,OAChB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCtEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.799693a9.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n  const pages = getNumbers(1, pageCount);\n  const firstPage = currentPage === 1;\n  const lastPage = currentPage === pageCount;\n\n  const handlePageChange = (newPage: number) => {\n    if (newPage === currentPage) {\n      return;\n    }\n\n    onPageChange(newPage);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', { disabled: firstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={firstPage}\n          onClick={() => handlePageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pages.map((page) => (\n        <li\n          key={page}\n          className={cn('page-item', { active: currentPage === page })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handlePageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', { disabled: lastPage })}>\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={lastPage}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const selectPerPage = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(e.target.value));\n    setCurrentPage(1);\n  };\n\n  const pageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const total = items.length;\n  const maxItem = currentPage * perPage;\n\n  const firstItem = maxItem - perPage;\n  const lastItem = maxItem > total\n    ? total\n    : maxItem;\n\n  const visibleItems = items.slice(firstItem, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem + 1} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={selectPerPage}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={pageChange}\n      />\n\n      <ul>\n        {visibleItems.map((item) => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}